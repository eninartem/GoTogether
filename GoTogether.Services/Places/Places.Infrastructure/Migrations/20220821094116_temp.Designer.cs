// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Places.Infrastructure.Persistance;

#nullable disable

namespace Places.Infrastructure.Migrations
{
    [DbContext(typeof(GtPlaceDbContext))]
    [Migration("20220821094116_temp")]
    partial class temp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Places.Domain.GtLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("GtLocations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad51f372-48a2-43f6-a5a8-5e6cf82d3033"),
                            City = "Samara",
                            Country = "Russia"
                        },
                        new
                        {
                            Id = new Guid("4416b0d6-8ffe-4f29-a700-172e31081be6"),
                            City = "Togliatty",
                            Country = "Russia"
                        });
                });

            modelBuilder.Entity("Places.Domain.GtPlace", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .HasMaxLength(250)
                        .HasColumnType("character varying(250)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("LocationId");

                    b.ToTable("GtPlaces");
                });

            modelBuilder.Entity("Places.Domain.GtPlace", b =>
                {
                    b.HasOne("Places.Domain.GtLocation", "Location")
                        .WithMany("GtPlaces")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Places.Domain.GtLocation", b =>
                {
                    b.Navigation("GtPlaces");
                });
#pragma warning restore 612, 618
        }
    }
}
